variables:
  GIT_SUBMODULE_STRATEGY: recursive
  # Requires manually keeping up to date with package.json
  TF_TFW_VERSION: 2.0.0

stages:
  - build
  - test
  - package
  - deploy

.Always_Build:
  stage: build
  when: always
  timeout: 10m

.Always_Test:
  stage: test
  when: always
  timeout: 10m

build::bundle:
  extends: .Always_Build
  tags:
    - unity
    - win10
  script:
    # Get the TF Tooling for web version
    - set -Name TF_API_VERSION -Value "$((Select-String -Path ".\src\internal\Connection\ServiceTypes.ts" "API_VERSION. '(.*)'," | Select-Object * -First 1).Matches.Groups[1].Value)"

    # Update Version.txt with latest information before packaging
    - python ./Scripts/UpdateVersionFile.py --path ${CI_PROJECT_DIR}/Version.txt --swVer $TF_TFW_VERSION --apiVer $TF_API_VERSION --ref ${CI_COMMIT_SHORT_SHA} --branchName "$CI_COMMIT_REF_NAME"
    - Get-Content ${CI_PROJECT_DIR}/Version.txt


    # Build Tooling
    - cd ${CI_PROJECT_DIR}
    - npm i
    - npm run build:bundle
    - npx generate-license-file --input ./package.json --output $CI_PROJECT_DIR/ThirdPartyLicenses.txt
    # Clean last build
    - cd ${CI_PROJECT_DIR}
    - if (Test-Path -Path "./Tooling_Release") {
      Remove-Item -LiteralPath ./Tooling_Release -Force -Recurse
      Remove-Item -LiteralPath ./Tooling_Release -Force -Recurse
      }
    # Package Tooling
    - mkdir ./Tooling_Release
    - cp $CI_PROJECT_DIR/ThirdPartyLicenses.txt ./Tooling_Release
    - cp ${CI_PROJECT_DIR}/Version.txt ./Tooling_Release
    - cp ${CI_PROJECT_DIR}/CHANGELOG.md ./Tooling_Release
    - cp -R ${CI_PROJECT_DIR}/dist ./Tooling_Release
    - cp -R ${CI_PROJECT_DIR}/Plugins ./Tooling_Release
    - cp -R ${CI_PROJECT_DIR}/quick-start ./Tooling_Release
  artifacts:
    name: 'Tooling_for_Web_Build_${CI_COMMIT_SHORT_SHA}'
    paths:
      - ./Tooling_Release/*
    expire_in: 2 weeks
    when: always

build::docs:
  extends: .Always_Build
  tags:
    - docker-windows
  image: registry.ultrahaptics.com/ooh/infrastructure/windows-touchfree-toolchain:latest
  script:
    - cd ${CI_PROJECT_DIR}
    - npm i
    - npm run build:docs
  artifacts:
    name: 'TouchFree_Tooling_Documentation'
    paths:
      - ./docs/markdown
    expire_in: 2 weeks
    when: always

test:
  extends: .Always_Test
  tags:
    - docker-windows
  image: registry.ultrahaptics.com/ooh/infrastructure/windows-touchfree-toolchain:latest
  script:
    # Run unit tests
    - cd ${CI_PROJECT_DIR}
    - npm i
    - npm run test
    - npm run test:coverage
  artifacts:
    when: always
    name: 'TestResults'
    paths:
      - ${CI_PROJECT_DIR}/junit.xml
      - ${CI_PROJECT_DIR}/coverage/
    reports:
      junit: ${CI_PROJECT_DIR}/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: ${CI_PROJECT_DIR}/coverage/cobertura-coverage.xml
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

pages:
  stage: deploy
  dependencies:
    - test
  script:
    - mkdir .public
    - cp ${CI_PROJECT_DIR}/coverage/* .public
    - mv .public public
  artifacts:
    paths:
      - public
  only:
    - develop

package::bundle:
  stage: package
  image: alpine:3.13
  dependencies:
    - build::bundle
    - build::docs
  needs: ['build::bundle', 'build::docs']
  script:
    - mkdir ./Tooling_Package/
    - cp -R ./Tooling_Release/* ./Tooling_Package/
    - cp -R ./docs/markdown ./Tooling_Package/Documentation/
  artifacts:
    name: 'TouchFree_Tooling_for_Web_${TF_TFW_VERSION}_${CI_COMMIT_SHORT_SHA}'
    paths:
      - ./Tooling_Package/*
    expire_in: 2 weeks
    when: always
  tags:
    - docker

npm::publish:
  stage: deploy
  when: manual
  tags:
    - docker-windows
  image: registry.ultrahaptics.com/ooh/infrastructure/windows-touchfree-toolchain:latest
  only:
    - release
  script:
    - npm config -L project set //registry.npmjs.org/:username=ul-touchfree
    - npm config -L project set //registry.npmjs.org/:_authToken=$NPM_TOKEN
    - npm i
    - npm run build:tsc
    - npm publish

npm::pack:
  stage: package
  when: always
  tags:
    - docker-windows
  image: registry.ultrahaptics.com/ooh/infrastructure/windows-touchfree-toolchain:latest
  only:
    - release
  script:
    - npm i
    - npm run build:tsc
    - npm pack
  artifacts:
    name: 'TouchFree_Tooling_npm_package_${TF_TFW_VERSION}_${CI_COMMIT_SHORT_SHA}'
    paths:
      - touchfree*.tgz
    expire_in: 2 weeks
