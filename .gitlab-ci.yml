variables:
  GIT_SUBMODULE_STRATEGY: recursive

  TF_TFW_VERSION: '1.4.0'
  TF_API_VERSION: '1.6.0'

stages:
  - build
  - test
  - package
  - deploy

.Always_Build:
  stage: build
  when: always
  timeout: 10m

.Always_Test:
  stage: test
  when: always
  timeout: 10m

TF_Tooling::Web::build:
  extends: .Always_Build
  tags:
    - unity
    - win10
  script:
    # Update Version.txt with latest information before packaging
    - python ./Scripts/UpdateVersionFile.py --path ${env:CI_PROJECT_DIR}/Version.txt --swVer ${env:TF_TFW_VERSION} --apiVer ${env:TF_API_VERSION} --ref ${env:CI_COMMIT_SHORT_SHA} --branchName "$CI_COMMIT_REF_NAME"
    - Get-Content ${env:CI_PROJECT_DIR}/Version.txt

    # Build Tooling
    - cd ${env:CI_PROJECT_DIR}
    - npm i
    - npm run build
    # Clean last build
    - cd ${env:CI_PROJECT_DIR}
    - if (Test-Path -Path "./Tooling_Release") {
        Remove-Item -LiteralPath ./Tooling_Release -Force -Recurse
        Remove-Item -LiteralPath ./Tooling_Release -Force -Recurse
      }
    # Package Tooling
    - mkdir ./Tooling_Release
    - cp ${env:CI_PROJECT_DIR}/Version.txt ./Tooling_Release
    - cp -R ${env:CI_PROJECT_DIR}/dist ./Tooling_Release
    - cp -R ${env:CI_PROJECT_DIR}/Plugins ./Tooling_Release
    - cp -R ${env:CI_PROJECT_DIR}/quick-start ./Tooling_Release
  artifacts:
    name: "Tooling_for_Web_Build_${env:CI_COMMIT_SHORT_SHA}"
    paths:
      - ./Tooling_Release/*
    expire_in: 2 weeks
    when: always

TF_Tooling::Docs::build:
  extends: .Always_Build
  tags:
    - docker
  image: registry.ultrahaptics.com/apps/infrastructure/docker-naturaldocs:main
  script:
    - mono "/opt/Natural Docs/NaturalDocs.exe" $CI_PROJECT_DIR/NaturalDocs_Config
  artifacts:
    name: "TouchFree_Tooling_Documentation"
    paths:
    - ./Documentation/*
    expire_in: 2 weeks
    when: always

TF_Tooling::Web::test:
  extends: .Always_Test
  dependencies:
    - TF_Tooling::Web::build
  tags:
    - docker-windows
  image: registry.ultrahaptics.com/ooh/infrastructure/windows-touchfree-toolchain:latest
  script:
    # Run unit tests
    - cd ${env:CI_PROJECT_DIR}
    - npm i
    - npm run test
    - npm run test:coverage
  artifacts:
    when: always
    name: "TestResults"
    paths:
    - ${env:CI_PROJECT_DIR}/junit.xml
    - ${env:CI_PROJECT_DIR}/coverage/
    reports:
      junit: ${env:CI_PROJECT_DIR}/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: ${env:CI_PROJECT_DIR}/coverage/cobertura-coverage.xml
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

pages:
  stage: deploy
  dependencies:
    - TF_Tooling::Web::test
  script:
    - mkdir .public
    - cp ${env:CI_PROJECT_DIR}/coverage/* .public
    - mv .public public
  artifacts:
    paths:
      - public
  only:
    - develop

TF_Tooling::Web::package:
  stage: package
  image: alpine:3.13
  dependencies:
    - TF_Tooling::Web::build
    - TF_Tooling::Docs::build
  needs: [
    "TF_Tooling::Web::build",
    "TF_Tooling::Docs::build"
  ]
  script:
    - mkdir ./Tooling_Package/
    - cp -R ./Tooling_Release/* ./Tooling_Package/
    - cp -R "./Documentation/Tooling for Web/" ./Tooling_Package/Documentation/
  artifacts:
    name: "TouchFree_Tooling_for_Web_${TF_TFW_VERSION}_${CI_COMMIT_SHORT_SHA}"
    paths:
      - ./Tooling_Package/*
    expire_in: 2 weeks
    when: always
  tags:
    - docker
